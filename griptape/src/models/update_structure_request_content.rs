/*
 * Griptape Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-09-19
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateStructureRequestContent {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "structure_config_file", skip_serializing_if = "Option::is_none")]
    pub structure_config_file: Option<String>,
    #[serde(rename = "env_vars", skip_serializing_if = "Option::is_none")]
    pub env_vars: Option<Vec<models::EnvVar>>,
    #[serde(rename = "webhook_enabled", skip_serializing_if = "Option::is_none")]
    pub webhook_enabled: Option<bool>,
}

impl UpdateStructureRequestContent {
    pub fn new() -> UpdateStructureRequestContent {
        UpdateStructureRequestContent {
            name: None,
            description: None,
            structure_config_file: None,
            env_vars: None,
            webhook_enabled: None,
        }
    }
}


/*
 * Griptape Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-09-19
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetIntegrationResponseContent {
    #[serde(rename = "integration_id")]
    pub integration_id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "config")]
    pub config: Box<models::IntegrationConfigUnion>,
    #[serde(rename = "type")]
    pub r#type: models::IntegrationType,
    #[serde(rename = "structure_ids")]
    pub structure_ids: Vec<String>,
    #[serde(rename = "assistant_ids")]
    pub assistant_ids: Vec<String>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "organization_id")]
    pub organization_id: String,
    #[serde(rename = "created_by")]
    pub created_by: String,
}

impl GetIntegrationResponseContent {
    pub fn new(integration_id: String, name: String, description: String, config: models::IntegrationConfigUnion, r#type: models::IntegrationType, structure_ids: Vec<String>, assistant_ids: Vec<String>, created_at: String, updated_at: String, organization_id: String, created_by: String) -> GetIntegrationResponseContent {
        GetIntegrationResponseContent {
            integration_id,
            name,
            description,
            config: Box::new(config),
            r#type,
            structure_ids,
            assistant_ids,
            created_at,
            updated_at,
            organization_id,
            created_by,
        }
    }
}


/*
 * Griptape Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-09-19
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssistantDetail {
    #[serde(rename = "assistant_id")]
    pub assistant_id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "input", skip_serializing_if = "Option::is_none")]
    pub input: Option<String>,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "knowledge_base_ids")]
    pub knowledge_base_ids: Vec<String>,
    #[serde(rename = "ruleset_ids")]
    pub ruleset_ids: Vec<String>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "organization_id")]
    pub organization_id: String,
    #[serde(rename = "created_by")]
    pub created_by: String,
    #[serde(rename = "structure_ids")]
    pub structure_ids: Vec<String>,
}

impl AssistantDetail {
    pub fn new(assistant_id: String, name: String, description: String, knowledge_base_ids: Vec<String>, ruleset_ids: Vec<String>, created_at: String, updated_at: String, organization_id: String, created_by: String, structure_ids: Vec<String>) -> AssistantDetail {
        AssistantDetail {
            assistant_id,
            name,
            input: None,
            description,
            knowledge_base_ids,
            ruleset_ids,
            created_at,
            updated_at,
            organization_id,
            created_by,
            structure_ids,
        }
    }
}


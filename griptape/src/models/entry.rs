/*
 * Griptape Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-09-19
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Entry {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "score")]
    pub score: f32,
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "vector", skip_serializing_if = "Option::is_none")]
    pub vector: Option<Vec<f32>>,
}

impl Entry {
    pub fn new(id: String, score: f32) -> Entry {
        Entry {
            id,
            score,
            meta: None,
            namespace: None,
            vector: None,
        }
    }
}


/*
 * Griptape Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-09-19
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateDeploymentResponseContent {
    #[serde(rename = "deployment_id")]
    pub deployment_id: String,
    #[serde(rename = "structure_id")]
    pub structure_id: String,
    #[serde(rename = "status")]
    pub status: models::DeploymentStatus,
    #[serde(rename = "status_detail", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub status_detail: Option<Option<serde_json::Value>>,
    #[serde(rename = "code_source")]
    pub code_source: Box<models::CodeSource>,
    #[serde(rename = "created_by")]
    pub created_by: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "completed_at", skip_serializing_if = "Option::is_none")]
    pub completed_at: Option<String>,
}

impl CreateDeploymentResponseContent {
    pub fn new(deployment_id: String, structure_id: String, status: models::DeploymentStatus, code_source: models::CodeSource, created_by: String, created_at: String) -> CreateDeploymentResponseContent {
        CreateDeploymentResponseContent {
            deployment_id,
            structure_id,
            status,
            status_detail: None,
            code_source: Box::new(code_source),
            created_by,
            created_at,
            completed_at: None,
        }
    }
}


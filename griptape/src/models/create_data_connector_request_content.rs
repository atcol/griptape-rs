/*
 * Griptape Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-09-19
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateDataConnectorRequestContent {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "config")]
    pub config: Box<models::DataConnectorConfigInputUnion>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "schedule_expression", skip_serializing_if = "Option::is_none")]
    pub schedule_expression: Option<String>,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "embedding_model", skip_serializing_if = "Option::is_none")]
    pub embedding_model: Option<models::EmbeddingModel>,
    #[serde(rename = "use_default_embedding_model", skip_serializing_if = "Option::is_none")]
    pub use_default_embedding_model: Option<bool>,
    #[serde(rename = "transforms", skip_serializing_if = "Option::is_none")]
    pub transforms: Option<Vec<models::TransformInput>>,
}

impl CreateDataConnectorRequestContent {
    pub fn new(name: String, config: models::DataConnectorConfigInputUnion, r#type: String) -> CreateDataConnectorRequestContent {
        CreateDataConnectorRequestContent {
            name,
            config: Box::new(config),
            description: None,
            schedule_expression: None,
            r#type,
            embedding_model: None,
            use_default_embedding_model: None,
            transforms: None,
        }
    }
}

